SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO


/*
IF EXISTS (SELECT * FROM sys.indexes WHERE name='idx_CSXDPRICE_VIEW_ITEM_KEY' AND object_id = OBJECT_ID('[dbo].[CSXDPRICE_VEW]'))
BEGIN
DROP INDEX idx_CSXDPRICE_VIEW_ITEM_KEY ON dbo.CSXDPRICE_VIEW;
END
create UNIQUE CLUSTERED INDEX  idx_CSXDPRICE_VIEW_ITEM_KEY on dbo.CSXDPRICE_VIEW (ITEM_KEY ASC, CODENO ASC);
GO

IF EXISTS (SELECT * FROM sys.indexes WHERE name='idx_CSXDPRICE_VIEW_CODENO' AND object_id = OBJECT_ID('[dbo].[CSXDPRICE_VEW]'))
BEGIN
DROP INDEX idx_CSXDPRICE_VIEW_CODENO ON dbo.CSXDPRICE_VIEW;
END
create UNIQUE NONCLUSTERED INDEX  idx_CSXDPRICE_VIEW_CODENO on dbo.CSXDPRICE_VIEW (CODENO ASC)
go
*/

CREATE VIEW [dbo].[ALL_PRICES_QRY] WITH SCHEMABINDING AS
select 'C' AS SOURCE,
CASE WHEN B.ACTIVE <> 0 THEN 'Y' ELSE 'N' END AS ACTIVE,
CASE WHEN B.LP <> 0 THEN 'Y' ELSE'N' END AS LP,
B.DEL AS DEL,C.CODENO AS CODENO,C.CODENAME AS CODENAME,
C.OLDCOST AS OLDCOST,
C.DECREASE AS DECREASE,C.OLDSELL AS OLDSELL,
C.NEWCOST AS NEWCOST,
C.NEWSELL AS NEWSELL,
C.RETAIL AS RETAIL,
C.COST500 AS COST500,
C.SELL500 AS SELL500,
C.INACTIVE AS INACTIVE,C.INVENTORY AS INVENTORY,C.EU_INVENTORY AS EU_INVENTORY,right(B.UID,12) AS IDNO,
B.ITEM_KEY AS ITEM_KEY, C.D, C.EC, C.COMMENT, 0 AS SEXED_ONLY, C.Royalty as ROYALTY
FROM (dbo.CPRICE_VIEW as C inner join dbo.BULLINDEX as B on((B.CODENO = C.CODENO))) where (C.NEWCOST > 0) 
UNION all select 'CSXD' AS SOURCE,
CASE WHEN B.ACTIVE <> 0 THEN 'Y' ELSE 'N' END AS ACTIVE,
CASE WHEN B.LP <> 0 THEN 'Y' ELSE'N' END AS LP,
B.DEL AS DEL,CSXD.CODENO AS CODENO,CSXD.CODENAME AS CODENAME,
CSXD.OLDCOST AS OLDCOST,CSXD.DECREASE AS DECREASE,
CSXD.OLDSELL AS OLDSELL,
CSXD.NEWCOST AS NEWCOST,
CSXD.NEWSELL AS NEWSELL,
CSXD.RETAIL AS RETAIL,
CSXD.COST500 AS COST500,
CSXD.SELL500 AS SELL500,
CSXD.INACTIVE AS INACTIVE,CSXD.INVENTORY AS INVENTORY,CSXD.EU_INVENTORY AS EU_INVENTORY,
right(B.UID,12) AS IDNO,B.ITEM_KEY AS ITEM_KEY, CSXD.D, CSXD.EC, CSXD.COMMENT, CSXD.SEXED_ONLY AS SEXED_ONLY,  CSXD.Royalty as ROYALTY
FROM (dbo.CSXDPRICE_VIEW as CSXD inner join dbo.BULLINDEX as B on((B.CODENO = CSXD.CODENO))) where (CSXD.NEWCOST >0) 
UNION all select 'H' AS SOURCE,
CASE WHEN B.ACTIVE <> 0 THEN 'Y' ELSE 'N' END AS ACTIVE,
CASE WHEN B.LP <> 0 THEN 'Y' ELSE'N' END AS LP,
B.DEL AS DEL,H.CODENO AS CODENO,H.CODENAME AS CODENAME,
H.OLDCOST AS OLDCOST,H.DECREASE AS DECREASE,
H.OLDSELL AS OLDSELL,
H.NEWCOST AS NEWCOST,
H.NEWSELL AS NEWSELL,
H.RETAIL AS RETAIL,
H.COST500 AS COST500,
H.SELL500 AS SELL500,
H.INACTIVE AS INACTIVE,H.INVENTORY AS INVENTORY,H.EU_INVENTORY AS EU_INVENTORY,
right(B.UID,12) AS IDNO,B.ITEM_KEY AS ITEM_KEY, H.D, H.EC, H.COMMENT, 0 AS SEXED_ONLY,  H.Royalty as ROYALTY
FROM (dbo.HPRICE_VIEW as H inner join dbo.BULLINDEX as B on((B.CODENO = H.CODENO))) where (H.NEWCOST > 0) 
UNION all select 'HSXD' AS SOURCE,
CASE WHEN B.ACTIVE <> 0 THEN 'Y' ELSE 'N' END AS ACTIVE,
CASE WHEN B.LP <> 0 THEN 'Y' ELSE'N' END AS LP,
B.DEL AS DEL, HSXD.CODENO AS CODENO,HSXD.CODENAME AS CODENAME,
HSXD.OLDCOST AS OLDCOST,HSXD.DECREASE AS DECREASE,
HSXD.OLDSELL AS OLDSELL,
HSXD.NEWCOST AS NEWCOST,
HSXD.NEWSELL AS NEWSELL,
HSXD.RETAIL AS RETAIL,
HSXD.COST500 AS COST500,
HSXD.SELL500 AS SELL500,
HSXD.INACTIVE AS INACTIVE,HSXD.INVENTORY AS INVENTORY,HSXD.EU_INVENTORY AS EU_INVENTORY,
right(B.UID,12) AS IDNO,B.ITEM_KEY AS ITEM_KEY,HSXD.D, HSXD.EC, HSXD.COMMENT, HSXD.SEXED_ONLY AS SEXED_ONLY, HSXD.Royalty as ROYALTY
FROM (dbo.HSXDPRICE_VIEW as HSXD inner join dbo.BULLINDEX as B on((B.CODENO = HSXD.CODENO))) where (HSXD.NEWCOST > 0) 
UNION ALL SELECT 'XF' AS SOURCE,
CASE WHEN XF.ACTIVE <> 0 THEN 'Y' ELSE 'N' END AS ACTIVE,
'N' AS LP,
XF.DEL AS DEL,XF.CODENO AS CODENO,XF.CODENAME AS CODENAME,
XF.OLDCOST AS OLDCOST,XF.DECREASE AS DECREASE,
XF.OLDSELL AS OLDSELL,
XF.NEWCOST AS NEWCOST,
XF.NEWSELL AS NEWSELL,
XF.RETAIL AS RETAIL,
0 AS COST500,
0 AS SELL500,
XF.INACTIVE AS INACTIVE,0 AS INVENTORY,0 AS EU_INVENTORY,
XF.IDNO, XF.ITEM_KEY AS ITEM_KEY, XF.D, XF.EC, '' AS COMMENT, 0 AS SEXED_ONLY, NULL as ROYALTY
FROM dbo.XF_SPAINPRICE_VIEW as XF where XF.NEWCOST > 0
UNION ALL SELECT 'SP' AS SOURCE,
CASE WHEN B.ACTIVE <> 0 THEN 'Y' ELSE 'N' END AS ACTIVE,
CASE WHEN B.LP <> 0 THEN 'Y' ELSE'N' END AS LP,
ABK.DEL AS DEL,ABK.CODENO AS CODENO,ABK.CODENAME AS CODENAME,
ABK.OLDCOST AS OLDCOST,ABK.DECREASE AS DECREASE,
ABK.OLDSELL AS OLDSELL,
ABK.NEWCOST AS NEWCOST,
ABK.NEWSELL AS NEWSELL,
ABK.RETAIL AS
RETAIL,
0 AS COST500,
0 AS SELL500,
ABK.INACTIVE AS INACTIVE,0 AS INVENTORY,0 AS EU_INVENTORY,
ABK.IDNO AS IDNO,B.ITEM_KEY AS ITEM_KEY, ABK.D, ABK.EC, '' AS COMMENT, 0 AS SEXED_ONLY, NULL AS ROYALTY
FROM (dbo.ABK_SPAINPRICE_VIEW as ABK inner join dbo.BULLINDEX as B on((B.CODENO = ABK.CODENO))) where (ABK.NEWCOST > 0)
GO